version: "3.9"
services:
  postgres:
    container_name: microgate_psql
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=microgate
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=auth
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d auth -U microgate"]
      timeout: 45s
      interval: 3s
      retries: 30
    networks:
      - microgate_net
    volumes:
      - postgres_data:/var/lib/postgresql/data


  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - microgate_net
    volumes:
      - mongo_data:/data/db

  redis:
    container_name: microgate_redis
    image: redis:6.0-alpine3.15
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 1s
      interval: 3s
      retries: 10
    networks:
      - microgate_net
    volumes:
      - redis_data:/data

  auth:
    container_name: microgate_auth-svc
    build:
      context: ../..           # kök dizine çık
      dockerfile: deployments/docker/auth-service.Dockerfile
    restart: on-failure
    ports:
      - "8083:8083"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "./grpc-health-probe", "-addr=auth:8083"]
      timeout: 30s
      interval: 3s
      retries: 15
    networks:
      - microgate_net

  task:
    container_name: microgate_task-svc
    build:
      context: ../..
      dockerfile: deployments/docker/task-service.Dockerfile
    restart: on-failure
    ports:
      - "8082:8082"
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "./grpc-health-probe", "-addr=task:8082"]
      timeout: 30s
      interval: 3s
      retries: 15
    networks:
      - microgate_net

  api_gateway:
    container_name: microgate_api_gateway-svc
    build:
      context: ../..
      dockerfile: deployments/docker/gateway-service.Dockerfile
    restart: on-failure
    ports:
      - "8081:8081"
    depends_on:
      task:
        condition: service_healthy
      auth:
        condition: service_healthy
    networks:
      - microgate_net

networks:
  microgate_net:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  redis_data:
