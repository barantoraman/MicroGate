task_service:
  db_user: "microgate"
  db_pass: "example"
  db_type: "mongo"
#  db_host: "localhost" # use without docker
  db_host: "mongo" # use with docker
  db_port: 27017
  db_name:  "task"
#  db_uri: "mongodb://root:example@localhost:27017/tasks?retryWrites=true&w=majority&authSource=admin" # use without docker
  db_uri: "mongodb://root:example@mongo:27017/tasks?retryWrites=true&w=majority&authSource=admin" # use with docker
  db_max_open_conns: 30
  db_max_idle_conns: 30
  db_max_idle_time: "15m"
  db_ssl_mode: "disable"
  grpc_port: "8082"
#  grpc_host: "localhost" # use without docker
  grpc_host: "task" # use with docker

auth_service:
  db_type: "postgres"
  db_user: "microgate"
  db_pass: "example"
#  db_host: "localhost" # use without docker
  db_host: "postgres" # use with docker
  db_port: 5432
  db_name:  "auth"
  db_dsn: "postgres://microgate:example@postgres:5432/auth?sslmode=disable" # use with docker
#  db_dsn: "microgate:example@/auth" # use without docker
  db_max_open_conns: 30
  db_max_idle_conns: 30
  db_max_idle_time: "15m"
  db_ssl_mode: "disable"
  store_type: "redis"
#  redis_url: "127.0.0.1:6379" # use without docker
  redis_url: "redis:6379" # use with docker
  redis_pass: ""
  grpc_port: "8083"
#  grpc_host: "localhost" # use without docker
  grpc_host: "auth" # use with docker

api_gateway_service:
  task_service_port: "8082"
  task_service_host: "task" # use with docker
#  task_service_host: "localhost" # use without docker
  auth_service_port: "8083"
  auth_service_host: "auth" # use with docker
#  auth_service_host: "localhost" # use without docker
  http_port: "8081"
  http_host: "0.0.0.0" # use with docker
#  http_host: "localhost" # use without docker

